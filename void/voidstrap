#!/usr/bin/bash
if [ "$EUID" -ne 0 ]
  then echo "Please run script as root"
  exit 1
fi

echo "Welcome to Voidlinux bootstrap script"
echo "Enter username (eg -> naruto) :-"
read username
echo "Enter Full Name (eg -> Naruto Uzumaki) :-"
read fullname
echo "Enter Your User's Password :-"
read -s userpass
echo "Enter Hostname (eg -> konoha) :-"
read hostname

lsblk
echo "Select Your Drive (eg -> /dev/sda):-"
read drive
cfdisk $drive
echo "Enter Root Partition Name (eg -> /dev/sda2) :-"
read rpart
echo "Enter Boot Partition Name (eg -> /dev/sda1) :-"
read bpart

mkfs.vfat -F32 $bpart || exit 1

#btrfs
mkfs.btrfs -f $rpart || exit 1
mount $rpart /mnt
btrfs subvolume create /mnt/@
btrfs subvolume create /mnt/@home
btrfs subvolume create /mnt/@snapshots

umount /mnt
mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@ $rpart /mnt
mkdir -p /mnt/home
mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@home $rpart /mnt/home/
mkdir -p /mnt/.snapshots
mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@snapshots $rpart /mnt/.snapshots

mount --mkdir $bpart /mnt/boot/efi

function installxbps {
 wget http://repo-default.voidlinux.org/static/xbps-static-latest.x86_64-musl.tar.xz
 mkdir /XBPS || exit 1
 tar xvf xbps-static-latest.x86_64-musl.tar.xz -C /XBPS
 export PATH=/XBPS/usr/bin:$PATH
}
command -v xbps-install || installxbps && isxbps=n

REPO=https://mirrors.dotsrc.org/voidlinux/current
ARCH=x86_64
mkdir -p /mnt/var/db/xbps/keys
case isxbps in
    n) cp /XBPS/var/db/xbps/keys/* /mnt/var/db/xbps/keys/ ;;
    *) cp /var/db/xbps/keys/* /mnt/var/db/xbps/keys/ ||  cp /XBPS/var/db/xbps/keys/* /mnt/var/db/xbps/keys/ ;;
esac
cp /XBPS/var/db/xbps/keys/* /mnt/var/db/xbps/keys/
XBPS_ARCH=$ARCH xbps-install -Sy -r /mnt -R "$REPO" base-system git linux grub-btrfs-runit grub-btrfs plymouth grub-x86_64-efi || exit 1
command -v genfstab || wget https://raw.githubusercontent.com/glacion/genfstab/master/genfstab -O /usr/bin/genfstab && chmod +x /usr/bin/genfstab
genfstab -U /mnt/ > /mnt/etc/fstab

echo "username=$username" >> /mnt/installconfig
echo "fullname=$fullname" >> /mnt/installconfig
echo "hostname=$hostname" >> /mnt/installconfig
echo "userpass=$userpass" >> /mnt/installconfig
echo "REPO=$REPO" >> /mnt/installconfig
sed '1,/^#inchroot$/d' `basename $0` > /mnt/inchroot.sh
chmod +x /mnt/inchroot.sh
rm /mnt/etc/resolv.conf
cp /etc/resolv.conf /mnt/etc/resolv.conf
for dir in dev proc sys run; do mount --rbind /$dir /mnt/$dir; mount --make-rslave /mnt/$dir; done
chroot /mnt ./inchroot.sh || exit 1
exit
#inchroot

printf '\033c'

hostname=$(grep "^hostname" /installconfig | cut -d "=" -f2)
username=$(grep "^username" /installconfig | cut -d "=" -f2)
fullname=$(grep "^fullname" /installconfig | cut -d "=" -f2)
userpass=$(grep "^userpass" /installconfig | cut -d "=" -f2)
REPO=$(grep "^REPO" /installconfig | cut -d "=" -f2)
xbps-install -S || exit 1

mkdir -p /etc/xbps.d
cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
echo "repository=$REPO" > /etc/xbps.d/00-repository-main.conf
rm /installconfig
ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
hwclock --systohc
echo $hostname > /etc/hostname
echo "127.0.1.1       $hostname.localdomain $hostname" >> /etc/hosts

xbps-install -S glibc-locales
echo "en_US.UTF-8 UTF-8" >> /etc/default/libc-locales
xbps-reconfigure -f glibc-locales
echo "HARDWARECLOCK=\"UTC\"" >> /etc/rc.conf
echo "KEYMAP=\"us\"" >> /etc/rc.conf

echo "hostonly=yes" >> /etc/dracut.conf
ln -s /etc/sv/grub-btrfs/ /etc/runit/runsvdir/current/
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=VoidLinux || exit 1
grub-mkconfig -o /boot/grub/grub.cfg || exit 1
printf '\033c'

deps_xorg="xorg-minimal xorg-input-drivers mesa mesa-dri xclip psmisc xprop xrandr libXrandr-devel libX11-devel libXinerama-devel libXft-devel"
deps_fonts="noto-fonts-ttf noto-fonts-emoji noto-fonts-cjk font-awesome6 font-awesome5"
deps_tools="unzip zip xdotool sxiv fzf man-db git exa xz base-devel xtools aria2 tldr bat"
deps_tools_2="neovim opendoas stow fish-shell wget ranger bash-completion xdg-utils xdg-user-dirs xtools starship"
deps_services="lxdm pamixer pipewire wireplumber-elogind alsa-utils NetworkManager dbus-elogind-x11 dbus-elogind-libs polkit-elogind elogind apparmor ufw ufw-extras socklog-void "  
deps_onhardware="emacs-x11 flameshot dosfstools ntfs-3g bluez bluez-alsa mpd libspa-bluetooth intel-ucode mpv ncmpcpp mpc firefox blueman"
deps_qtilerice="alacritty qtile python3-psutil neofetch xwallpaper"
deps_gui="lxsession lxappearance kvantum qt5ct pcmanfm pavucontrol"

xbps-install -Sy $deps_xorg $deps_tools_2 $deps_tools $deps_services $deps_qtilerice $deps_fonts $deps_gui || exit 1

echo "QT_QPA_PLATFORMTHEME=qt5ct" >> /etc/environment
sed -i 's@APPARMOR=complain@APPARMOR=enforce@g' /etc/default/apparmor
echo 'kernel_cmdline="apparmor=1 security=apparmor"' > /etc/dracut.conf.d/cmdline.conf

ln -s /etc/sv/dbus/ /etc/runit/runsvdir/current/
ln -s /etc/sv/NetworkManager/ /etc/runit/runsvdir/current/
ln -s /etc/sv/lxdm/ /etc/runit/runsvdir/current/
ln -s /etc/sv/polkitd/ /etc/runit/runsvdir/current/
ln -s /etc/sv/socklog-unix/ /etc/runit/runsvdir/current/
ln -s /etc/sv/nanoklogd/ /etc/runit/runsvdir/current/
ln -s /etc/sv/ufw/ /etc/runit/runsvdir/current/
ufw enable

# Pipewire
ln -s /usr/share/applications/pipewire.desktop /etc/xdg/autostart/pipewire.desktop
mkdir -p /etc/pipewire/pipewire.conf.d
ln -s /usr/share/examples/wireplumber/10-wireplumber.conf /etc/pipewire/pipewire.conf.d/
ln -s /usr/share/examples/pipewire/20-pipewire-pulse.conf /etc/pipewire/pipewire.conf.

sed -i "s|# autologin=dgod|autologin=$username|g" /etc/lxdm/lxdm.conf
sed -i "s|# session=/usr/bin/startlxde|session=/bin/qtile start|g" /etc/lxdm/lxdm.conf
echo "source ~/.bash_profile" >> /etc/lxdm/PostLogin

mkdir -p /etc/X11/xorg.conf.d/
cat << EOF >> /etc/X11/xorg.conf.d/30-touchpad.conf
Section "InputClass"
     Identifier "devname"
     Driver "libinput"
         Option "Tapping" "on"
         Option "NaturalScrolling" "true"
EndSection
EOF

echo "%wheel ALL=(ALL:ALL) ALL" >> /etc/sudoers
echo "permit nopass :wheel as root" >> /etc/doas.conf
useradd -mG wheel,audio,video,network "$username" -c "$fullname"
printf '%s\n%s\n' "$userpass" "$userpass" | passwd root;
printf '%s\n%s\n' "$userpass" "$userpass" | passwd $username;
xbps-reconfigure -fa

dots_path=/home/$username/installdots
sed '1,/^#dotssetup$/d' /inchroot.sh > $dots_path
chown $username:$username $dots_path
chmod +x $dots_path
su -c $dots_path -s /bin/bash $username
exit
#dotssetup

printf '\033c'
cd $HOME
git clone https://github.com/Sigma-Coder777/dots.git ~/.dots
cd .dots && stow */ --adopt
xdg-user-dirs-update
cp ~/.local/share/backgrounds/* ~/Pictures

mkdir -p ~/.tmp/
cd ~/.tmp
wget "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.1/JetBrainsMono.zip"
wget "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.1/Ubuntu.zip"
unzip Ubuntu.zip
rm readme.md
unzip JetBrainsMono.zip
doas mv *.ttf /usr/share/fonts/
rm -rf ~/.tmp
fc-cache
cd $HOME

mkdir -p $HOME/.local/share/themes
wget https://github.com/catppuccin/gtk/releases/download/v0.6.1/Catppuccin-Mocha-Standard-Pink-dark.zip -O $HOME/.local/share/themes/theme.zip
cd $HOME/.local/share/themes
unzip theme.zip
rm *.zip

mkdir -p $HOME/.local/pkgs
git clone --depth 1 https://github.com/catppuccin/Kvantum $HOME/.local/pkgs/kvantum
git clone https://github.com/vinceliuice/vimix-icon-theme.git --depth 1 $HOME/.local/pkgs/icons
$HOME/.local/pkgs/icons/install.sh

cd ~/.local/src/dmenu && doas make clean install
cd ~/.dots/ && git checkout -f

rm $HOME/installdots
doas rm /inchroot.sh
